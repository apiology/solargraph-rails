# To debug locally:
#   npm install -g act
#   act act pull_request
#

name: Ruby

on:
  workflow_dispatch: {}
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions:
          # ruby 2.7 is minimum Ruby supported by Rails 7.0
          - ruby: "3.0"
            rails-major: "7"
            rails-minor: "0"
          # # ruby 2.7 is minimum Ruby supported by Rails 7.1
          # - ruby: "3.0"
          #   rails-major: "7"
          #   rails-minor: "1"
          # # ruby 3.1 is minimum Ruby supported by Rails 7.2
          # - ruby: "3.1"
          #   rails-major: "7"
          #   rails-minor: "2"
          # # ruby 3.2 is minimum Ruby supported by Rails 8.0
          # - ruby: "3.2"
          #   rails-major: "8"
          #   rails-minor: "0"
        solargraph-version:
          - "0.48.0"
          - "0.49.0"
          - "0.50.0"
          - "0.51.2"
          - "0.52.0"
          - "0.54.6.alpha"
          - "0.55.alpha"
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: cache gemfile.lock for better cache stability
        uses: actions/cache@v3
        id: gemfilelock
        with:
          key: ${{ runner.os }}-gemfilelock-${{ matrix.versions.ruby }}-${{ matrix.versions.rails-major }}-${{ matrix.versions.rails-minor }}
          path: |
            ${{ env.GITHUB_WORKSPACE }}/Gemfile.lock

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.versions.ruby }}
          bundler: latest
          bundler-cache: true
          cache-version: ${{ matrix.solargraph-version }}-2025-06-02
        env:
          # Used in Gemfile/gemspec
          MATRIX_SOLARGRAPH_VERSION: ${{ matrix.solargraph-version }}
          # Ensure that we share cache between spec/rails*/Gemfile and Gemfile in the root
          RAILS_VERSION: ${{ matrix.versions.rails-major }}.${{ matrix.versions.rails-minor }}

      - name: Install child bundle
        run: |
          set -x
          # same as used by ruby/setup-ruby
          BUNDLE_PATH="${GITHUB_WORKSPACE:?}/vendor/bundle"
          export BUNDLE_PATH
          RAILS_DIR="${GITHUB_WORKSPACE:?}/spec/rails${{ matrix.versions.rails-major }}"
          export RAILS_DIR
          cd ${RAILS_DIR}
          bundle install
          # these solargraphs use rbs versions that are too old - and
          # don't pay attention to the rbs collection regardless
          if [[ "$MATRIX_SOLARGRAPH_VERSION" != "0.48.0" && "$MATRIX_SOLARGRAPH_VERSION" != "0.49.0" && "$MATRIX_SOLARGRAPH_VERSION" != "0.50.0" ]]
          then
            bundle exec --gemfile ../../Gemfile rbs --version
            bundle exec --gemfile ../../Gemfile rbs collection init || true
            bundle exec --gemfile ../../Gemfile rbs collection install
          fi
          cd ../..
        env:
          # Used in Gemfile/gemspec
          MATRIX_SOLARGRAPH_VERSION: ${{ matrix.solargraph-version }}
          RAILS_VERSION: ${{ matrix.versions.rails-major }}.${{ matrix.versions.rails-minor }}

      - name: Restore cache of gem annotations
        id: dot-cache-restore
        uses: actions/cache/restore@v4
        with:
          key: |
            ${{ runner.os }}-dot-cache-${{ matrix.solargraph-version }}-${{ matrix.versions.rails-major }}--${{ matrix.versions.rails-minor }}-${{ hashFiles('spec/**/Gemfile.lock') }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-dot-cache-${{ matrix.solargraph-version }}-${{ matrix.versions.rails-major }}-${{ matrix.versions.rails-minor }}-${{ hashFiles('spec/**/Gemfile.lock') }}-
            ${{ runner.os }}-dot-cache-${{ matrix.solargraph-version }}-${{ matrix.versions.rails-major }}-${{ matrix.versions.rails-minor }}-
            ${{ runner.os }}-dot-cache-${{ matrix.solargraph-version }}-${{ matrix.versions.rails-major }}-
            ${{ runner.os }}-dot-cache-${{ matrix.solargraph-version }}-
          path: |
            /home/runner/.cache/solargraph

      - name: bundle list
        run: |
          # same as used by ruby/setup-ruby
          BUNDLE_PATH="${GITHUB_WORKSPACE:?}/vendor/bundle"
          export BUNDLE_PATH
          RAILS_DIR="${GITHUB_WORKSPACE:?}/spec/rails${{ matrix.versions.rails-major }}"
          export RAILS_DIR
          bundle list && cat Gemfile.lock && find vendor -name Gemfile
        env:
          # Used in Gemfile/gemspec
          MATRIX_SOLARGRAPH_VERSION: ${{ matrix.solargraph-version }}
          RAILS_VERSION: ${{ matrix.versions.rails-major }}.${{ matrix.versions.rails-minor }}

      #- name: Setup upterm session
      #  uses: lhotari/action-upterm@v1

      - name: RSpec
        run: |
          set -x
          # same as used by ruby/setup-ruby
          BUNDLE_PATH="${GITHUB_WORKSPACE:?}/vendor/bundle"
          export BUNDLE_PATH
          RAILS_DIR="${GITHUB_WORKSPACE:?}/spec/rails${{ matrix.versions.rails-major }}"
          export RAILS_DIR
          ruby --version
          bundle install
          bundle update solargraph
          bundle exec solargraph version
          bundle info solargraph
          bundle exec rspec spec/solargraph-rails
        env:
          # Used in Gemfile/gemspec
          MATRIX_SOLARGRAPH_VERSION: ${{ matrix.solargraph-version }}
          RAILS_VERSION: ${{ matrix.versions.rails-major }}.${{ matrix.versions.rails-minor }}

      - name: Cache gem annotations
        id: dot-cache-save
        if: always() && steps.dot-cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: |
            ${{ runner.os }}-dot-cache-${{ matrix.solargraph-version }}-${{ matrix.versions.rails-major }}--${{ matrix.versions.rails-minor }}-${{ hashFiles('spec/**/Gemfile.lock') }}-${{ hashFiles('Gemfile.lock') }}
          path: |
            /home/runner/.cache/solargraph
